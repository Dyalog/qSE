 Serialise←{
     ⍺←⍬
     num←serialise.FirstNum ⍺,0
     caller←serialise.FirstNs ⍺,⊃⎕RSI

     Bad←{(caller code)←⍵
         '+'∊⍺:0
         value←Deserialise caller.{⍺⍺ ⍵}code ⍝ deserialise in caller namespace to have proper ⎕FR
         code≢caller serialise.Ser value  ⍝ serialisation must round-trip
     }
     code←caller serialise.Ser ⍵
     ⍺ Bad caller code:'It would not be possible to deserialise the generated array notation'⎕SIGNAL 16

     split←{(+/∨\' '≠⌽⍵)↑¨↓⍵}⎕FMT code

     1∊⍺:'''[^'']+''' '([[(]) ⋄ ' ' ⋄ ([])])' '  +'⎕R'&' '\1' ' ⋄\1' ' '⊢3↓∊' ⋄ '∘,¨split

     spaces←⌊|num+2×0=num
     code←'''[^'']*'''⎕R'⋄'⊢code                  ⍝ remove quoted text first
     fmt←⎕FMT'\[[^][]+\]' '\([^)(]+\)'⎕R''⍣≡code  ⍝ remove bracket contents
     delta←(+/'(['∊⍨fmt)-(+/fmt∊')]')
     ind←+\0(⌊+0,¯1↓⌈)delta
     ind{⍵,⍨⍺⍴''}¨split
 }
